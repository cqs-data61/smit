#
# SMIT package implements a basic IoT platform.
#
# Copyright 2016-2018 Distributed Systems Security, Data61, CSIRO
#
# This file is part of SMIT package.
#
# SMIT package is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# SMIT package is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with SMIT package.  If not, see <https://www.gnu.org/licenses/>.
#

#
# This section configures information for CSR file.
#
# Certificate Signing Request (CSR) information section
# This section will be used to generate CSR file if needed.
C = "AU"
ST = "NSW"
L = "Marsfield"
O = "CSIRO"
OU = "DATA61"
CN = "server.smit.ca.com"
emailAddress = "server.smit@ca.com"
###############
#
# This section configures information for paths to certificate related files.
#
# Set the path to server device certificate.
#This path is also used to store the certificate obtained from the CA.
CERT = "cert/mycert.pem"
# Set the path to server CSR file.
#This path is also used to store the generated CSR file during the enroll phase.
CSR = "mycsr.csr"
# Set the path to server private key.
#This path is also used to store the generated private key during the enroll phase.
SK = "private/mykey.pem"
# Set the path to CA certificate.
# This path is also used to store the CA certificate obtained during the enroll phase.
CACERT = "cert/cacert.pem"
# Set the path to CA chain.
# The certificate chain could be the same as CACERT if there is only one CA in the chain.
# Otherwise, set the path to a specific certificate chain file which contains all certificates to root CA.
CACHAIN = "cert/cacert.pem"
###############
#
# Set ECC parameter for generating certificate.
ECCPARAM = "secp256k1"
###############
#
# Signature generation and verification section
#
# The arguments in this section MUST in a tuple, otherwise the signature verification will fail.
# That is the signature (on message) must be generated by the signer who has the private key of SIGNER-CERT.
#
# Set path to message file.
MSG = "msg"
# Set path to signature file. If new signature is generated, the old one will be overwritten.
SIG = "sig"
###############
#
# This section configures information for netowrks.
#
# CA's IPv4 address and port.
CAIP = "127.0.0.1"
CAPORT = "12345"
# DTLS server's IPv6 address and port.
SERVERIP = "::1"
SERVERPORT = "56789"
################
#
# This section configures DTLS connection parameters.
# Note that the DTLS connection will use the certificate specified in "CERT" and the private key
# in "SK" during DTLS handshake. So that these two keyword must NOT be empty.
#
# set the type of device, the value should be either 'server' or 'client'
TYPE = "server"
# set if the DTLS handshake requires certificate. The value must be one of "CERT_NONE", "CERT_OPTIONAL" or "CERT_REQUIRED".
CERT_REQS = "CERT_REQUIRED"
